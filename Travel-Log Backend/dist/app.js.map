{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import compression from 'compression';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\nimport express from 'express';\nimport helmet from 'helmet';\nimport hpp from 'hpp';\nimport morgan from 'morgan';\nimport mongoose,{ connect, set } from 'mongoose';\nimport swaggerJSDoc from 'swagger-jsdoc';\nimport swaggerUi from 'swagger-ui-express';\nimport { NODE_ENV, PORT, LOG_FORMAT, ORIGIN, CREDENTIALS } from '@config';\nimport { dbConnection } from '@databases';\nimport { Routes } from '@interfaces/routes.interface';\nimport errorMiddleware from '@middlewares/error.middleware';\nimport { logger, stream } from '@utils/logger';\n//Be2ZJlzv996GL5yO\n\nmongoose.set('strictQuery', false);\nclass App {\n  public app: express.Application;\n  public env: string;\n  public port: string | number;\n\n  constructor(routes: Routes[]) {\n    this.app = express();\n    this.env = NODE_ENV || 'development';\n    this.port = PORT || 3000;\n\n    this.connectToDatabase();\n    this.initializeMiddlewares();\n    this.initializeRoutes(routes);\n    this.initializeSwagger();\n    this.initializeErrorHandling();\n  }\n\n  public listen() {\n    this.app.listen(this.port, () => {\n      logger.info(`=================================`);\n      logger.info(`======= ENV: ${this.env} =======`);\n      logger.info(`ðŸš€ App listening on the port ${this.port}`);\n      logger.info(`=================================`);\n    });\n  }\n\n  public getServer() {\n    return this.app;\n  }\n\n  private connectToDatabase() {\n    if (this.env !== 'production') {\n      set('debug', true);\n    }\n\n    connect(dbConnection.url, dbConnection.options);\n  }\n\n  private initializeMiddlewares() {\n    this.app.use(morgan(LOG_FORMAT, { stream }));\n    this.app.use(cors({ origin: ORIGIN, credentials: CREDENTIALS }));\n    this.app.use(hpp());\n    this.app.use(helmet());\n    this.app.use(compression());\n    this.app.use(express.json());\n    this.app.use(express.urlencoded({ extended: true }));\n    this.app.use(cookieParser());\n  }\n\n  private initializeRoutes(routes: Routes[]) {\n    routes.forEach(route => {\n      this.app.use('/', route.router);\n    });\n  }\n\n  private initializeSwagger() {\n    const options = {\n      swaggerDefinition: {\n        info: {\n          title: 'REST API',\n          version: '1.0.0',\n          description: 'Example docs',\n        },\n      },\n      apis: ['swagger.yaml'],\n    };\n\n    const specs = swaggerJSDoc(options);\n    this.app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\n  }\n\n  private initializeErrorHandling() {\n    this.app.use(errorMiddleware);\n  }\n}\n\nexport default App;\n"],"names":["mongoose","set","App","listen","app","port","logger","info","env","getServer","connectToDatabase","connect","dbConnection","url","options","initializeMiddlewares","use","morgan","LOG_FORMAT","stream","cors","origin","ORIGIN","credentials","CREDENTIALS","hpp","helmet","compression","express","json","urlencoded","extended","cookieParser","initializeRoutes","routes","forEach","route","router","initializeSwagger","swaggerDefinition","title","version","description","apis","specs","swaggerJSDoc","swaggerUi","serve","setup","initializeErrorHandling","errorMiddleware","constructor","NODE_ENV","PORT"],"mappings":"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"}